-- Ci dessous pour voir les requetes pour chaque processeur (scheduler_id)

select * from sys.dm_exec_requests
where scheduler_id=2

--- --------------------------Jointure entre les deux DMViews Ecriture Disque et CPU

select res.scheduler_id,pending_disk_io_count,* 
from sys.dm_exec_requests res inner join sys.dm_os_schedulers s
on s.scheduler_id=res.scheduler_id
where session_id >50
and pending_disk_io_count >0
order by 2 desc

-------------------------------Recuperer les 10 requetes les plus couteuses Niveau CPU------------------------


SELECT TOP 10 text AS SQL_REQUEST, query_plan AS EXECUTION_PLAN
FROM   sys.dm_exec_query_stats AS s WITH(NOLOCK)
       CROSS APPLY sys.dm_exec_query_plan(s.plan_handle) p
       CROSS APPLY sys.dm_exec_sql_text(s.plan_handle) AS q
WHERE  p.query_plan.value('declare namespace p="http://schemas.microsoft.com/sqlserver/2004/07/showplan";
                           max(//p:RelOp/@Parallel)', 'float') > 0
ORDER BY total_worker_time/execution_count DESC
OPTION (MAXDOP 1);

---------------------------Get CPU utilization by database (CPU Usage by Database) --------------
WITH DB_CPU_Stats
AS
(SELECT DatabaseID, DB_Name(DatabaseID) AS [Database Name], SUM(total_worker_time) AS [CPU_Time_Ms]
 FROM sys.dm_exec_query_stats AS qs
 CROSS APPLY (SELECT CONVERT(int, value) AS [DatabaseID] 
              FROM sys.dm_exec_plan_attributes(qs.plan_handle)
              WHERE attribute = N'dbid') AS F_DB
 GROUP BY DatabaseID)
SELECT ROW_NUMBER() OVER(ORDER BY [CPU_Time_Ms] DESC) AS [CPU Rank],
       [Database Name], [CPU_Time_Ms] AS [CPU Time (ms)], 
       CAST([CPU_Time_Ms] * 1.0 / SUM([CPU_Time_Ms]) OVER() * 100.0 AS DECIMAL(5, 2)) AS [CPU Percent]
FROM DB_CPU_Stats
WHERE DatabaseID <> 32767 -- ResourceDB
ORDER BY [CPU Rank] OPTION (RECOMPILE);